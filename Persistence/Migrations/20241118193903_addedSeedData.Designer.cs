// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20241118193903_addedSeedData")]
    partial class addedSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tasarım Kupa, Tabak ve Çanaklar..",
                            Name = "Kitchen Products"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tasarım Ev Ürünleri",
                            Name = "Home Decor"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Bahçe ve Dış Tasarım Ürümleri ",
                            Name = "OutDoor Decor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingAddress = "1234 Any St.",
                            ShippingAddress = "1234 Any St.",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BillingAddress = "4321 Ny St.",
                            ShippingAddress = "4321 Ny St.",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BillingAddress = "4321 Ny St.",
                            ShippingAddress = "4321 Ny St.",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 18, 22, 39, 2, 950, DateTimeKind.Local).AddTicks(6123),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 18, 22, 39, 2, 950, DateTimeKind.Local).AddTicks(6130),
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 11, 18, 22, 39, 2, 950, DateTimeKind.Local).AddTicks(6133),
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuestInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderStatusId1")
                        .HasColumnType("int");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("OrderStatusId1");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderStatusId = 1,
                            PaymentId = 1,
                            TotalAmount = 1m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            OrderStatusId = 2,
                            PaymentId = 2,
                            TotalAmount = 2m
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            OrderStatusId = 3,
                            PaymentId = 3,
                            TotalAmount = 3m
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3,
                            OrderStatusId = 3,
                            PaymentId = 3,
                            TotalAmount = 8m
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 2,
                            OrderStatusId = 3,
                            PaymentId = 3,
                            TotalAmount = 28m
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 1,
                            OrderStatusId = 3,
                            PaymentId = 3,
                            TotalAmount = 18m
                        });
                });

            modelBuilder.Entity("Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Price = 100m,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            Price = 200m,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            Price = 500m,
                            ProductId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 4,
                            Price = 500m,
                            ProductId = 4,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 5,
                            Price = 500m,
                            ProductId = 5,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 6,
                            Price = 500m,
                            ProductId = 6,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Beklemede",
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Onaylandı",
                            Name = "Confirmed"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Kargoya Verildi",
                            Name = "Shipped"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Teslim Edildi",
                            Name = "Delivered"
                        },
                        new
                        {
                            Id = 5,
                            Description = "İptal Edildi",
                            Name = "Cancelled"
                        },
                        new
                        {
                            Id = 6,
                            Description = "İade Edildi",
                            Name = "Returned"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 500m,
                            OrderId = 1,
                            PaymentDate = new DateTime(2024, 11, 18, 22, 39, 2, 950, DateTimeKind.Local).AddTicks(5529),
                            PaymentMethodId = 1,
                            PaymentStatus = 0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200m,
                            OrderId = 2,
                            PaymentDate = new DateTime(2024, 11, 18, 22, 39, 2, 950, DateTimeKind.Local).AddTicks(5547),
                            PaymentMethodId = 2,
                            PaymentStatus = 0
                        },
                        new
                        {
                            Id = 3,
                            Amount = 100.00m,
                            OrderId = 1,
                            PaymentDate = new DateTime(2024, 11, 18, 19, 39, 2, 950, DateTimeKind.Utc).AddTicks(6325),
                            PaymentMethodId = 1,
                            PaymentStatus = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 200.00m,
                            OrderId = 2,
                            PaymentDate = new DateTime(2024, 11, 18, 19, 39, 2, 950, DateTimeKind.Utc).AddTicks(6327),
                            PaymentMethodId = 2,
                            PaymentStatus = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Kredi Kartı İle Ödeme",
                            Name = "Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Havale/EFT İle Ödeme",
                            Name = "Wire Transfer/EFT"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Mobil Ödeme",
                            Name = "Mobile Payment"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Kapıda Ödeme",
                            Name = "Payment At Door"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FinalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Description",
                            ImageUrl = "https://images.pexels.com/photos/11020238/pexels-photo-11020238.jpeg",
                            Name = "Kupa",
                            Price = 500m,
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Description",
                            ImageUrl = "https://images.pexels.com/photos/6805518/pexels-photo-6805518.jpeg",
                            Name = "Vazo",
                            Price = 300m,
                            StockQuantity = 5
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Description",
                            ImageUrl = "https://images.pexels.com/photos/9130701/pexels-photo-9130701.jpeg",
                            Name = "Saksı",
                            Price = 500m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Description",
                            ImageUrl = "https://websitedemos.net/ceramic-products-store-04/wp-content/uploads/sites/1413/2024/02/ceramic-cup-01-300x300.jpg",
                            Name = "Kupa",
                            Price = 350m,
                            StockQuantity = 55
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Description",
                            ImageUrl = "https://images.pexels.com/photos/29432556/pexels-photo-29432556/free-photo-of-masada-mumlu-mavi-vazoda-mor-cicekler.jpeg",
                            Name = "Vazo",
                            Price = 750m,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Description",
                            ImageUrl = "https://images.pexels.com/photos/21273580/pexels-photo-21273580/free-photo-of-yapraklar-pencereler-camlar-bitkiler.jpeg",
                            Name = "Saksı",
                            Price = 550m,
                            StockQuantity = 85
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            ProductId = 1,
                            Rating = 5,
                            Review = "Bu kupa harikaa! Çok kullanışlı..",
                            ReviewDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            ProductId = 2,
                            Rating = 5,
                            Review = "Bu vazo harikaa! Evime çok güzel bir hava getirdi.",
                            ReviewDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            ProductId = 3,
                            Rating = 5,
                            Review = "Çok güzel bir saksı.",
                            ReviewDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3,
                            ProductId = 4,
                            Rating = 4,
                            Review = "Çok güzel bir kupa ve kullanışlı.",
                            ReviewDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 3,
                            ProductId = 5,
                            Rating = 5,
                            Review = "Çok güzel bir vazo ve çok şık durdu.",
                            ReviewDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 3,
                            ProductId = 5,
                            Rating = 5,
                            Review = "Çok güzel bir saksı çiceklerimle çok uyumlu.",
                            ReviewDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Entities.ShoppingBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("ShoppingBasket");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.ShoppingBasketDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingBasketId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingBasketId");

                    b.ToTable("ShoppingBasketDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 500.0,
                            ProductId = 1,
                            Quantity = 1,
                            ShoppingBasketId = 1
                        },
                        new
                        {
                            Id = 2,
                            Price = 300.0,
                            ProductId = 2,
                            Quantity = 2,
                            ShoppingBasketId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 18, 19, 39, 2, 950, DateTimeKind.Utc).AddTicks(4614),
                            Email = "customer1@example.com",
                            FirstName = "+2vS9SiEjuEtdomA+E1iOw==",
                            Gender = "Famela",
                            IsDeleted = false,
                            LastName = "evKlCl7mIBJkEqQf5ueGMg==",
                            PasswordHash = new byte[] { 42, 18, 9, 178, 22, 53, 79, 190, 239, 8, 248, 124, 41, 229, 44, 171, 130, 34, 3, 132, 199, 225, 83, 108, 109, 90, 120, 171, 244, 25, 136, 86, 126, 96, 202, 72, 5, 84, 250, 247, 4, 242, 127, 20, 228, 129, 170, 96, 42, 137, 194, 143, 173, 154, 210, 118, 100, 238, 168, 46, 70, 233, 153, 180 },
                            PasswordSalt = new byte[] { 209, 170, 1, 45, 25, 200, 95, 190, 149, 202, 13, 171, 35, 97, 18, 2, 192, 206, 212, 133, 98, 253, 39, 221, 119, 50, 155, 219, 145, 64, 47, 189, 160, 178, 206, 147, 12, 10, 52, 214, 36, 65, 20, 176, 127, 196, 117, 28, 218, 17, 184, 125, 84, 46, 88, 143, 123, 184, 161, 108, 180, 221, 146, 246, 61, 16, 222, 225, 38, 68, 57, 175, 138, 244, 235, 4, 13, 243, 170, 219, 173, 147, 155, 199, 59, 89, 42, 121, 242, 32, 126, 162, 215, 60, 205, 165, 179, 177, 233, 99, 118, 223, 125, 38, 83, 242, 18, 166, 159, 85, 249, 14, 152, 177, 218, 56, 173, 229, 219, 59, 215, 120, 109, 164, 137, 52, 82, 50 },
                            PhoneNumber = "1234567890",
                            UserType = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 18, 19, 39, 2, 950, DateTimeKind.Utc).AddTicks(4712),
                            Email = "customer2@example.com",
                            FirstName = "lx191yNB5UTgUeNqX1QIZQ==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "ESeBAof1D3qOrdvr0NsjqQ==",
                            PasswordHash = new byte[] { 42, 18, 9, 178, 22, 53, 79, 190, 239, 8, 248, 124, 41, 229, 44, 171, 130, 34, 3, 132, 199, 225, 83, 108, 109, 90, 120, 171, 244, 25, 136, 86, 126, 96, 202, 72, 5, 84, 250, 247, 4, 242, 127, 20, 228, 129, 170, 96, 42, 137, 194, 143, 173, 154, 210, 118, 100, 238, 168, 46, 70, 233, 153, 180 },
                            PasswordSalt = new byte[] { 209, 170, 1, 45, 25, 200, 95, 190, 149, 202, 13, 171, 35, 97, 18, 2, 192, 206, 212, 133, 98, 253, 39, 221, 119, 50, 155, 219, 145, 64, 47, 189, 160, 178, 206, 147, 12, 10, 52, 214, 36, 65, 20, 176, 127, 196, 117, 28, 218, 17, 184, 125, 84, 46, 88, 143, 123, 184, 161, 108, 180, 221, 146, 246, 61, 16, 222, 225, 38, 68, 57, 175, 138, 244, 235, 4, 13, 243, 170, 219, 173, 147, 155, 199, 59, 89, 42, 121, 242, 32, 126, 162, 215, 60, 205, 165, 179, 177, 233, 99, 118, 223, 125, 38, 83, 242, 18, 166, 159, 85, 249, 14, 152, 177, 218, 56, 173, 229, 219, 59, 215, 120, 109, 164, 137, 52, 82, 50 },
                            PhoneNumber = "1234512345",
                            UserType = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 11, 18, 19, 39, 2, 950, DateTimeKind.Utc).AddTicks(4794),
                            Email = "guest1@example.com",
                            FirstName = "XsKf4aJaXsFVtCmJtPLh9A==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "jp8wRnLaDCWzCeqYjo2dOQ==",
                            PasswordHash = new byte[] { 42, 18, 9, 178, 22, 53, 79, 190, 239, 8, 248, 124, 41, 229, 44, 171, 130, 34, 3, 132, 199, 225, 83, 108, 109, 90, 120, 171, 244, 25, 136, 86, 126, 96, 202, 72, 5, 84, 250, 247, 4, 242, 127, 20, 228, 129, 170, 96, 42, 137, 194, 143, 173, 154, 210, 118, 100, 238, 168, 46, 70, 233, 153, 180 },
                            PasswordSalt = new byte[] { 209, 170, 1, 45, 25, 200, 95, 190, 149, 202, 13, 171, 35, 97, 18, 2, 192, 206, 212, 133, 98, 253, 39, 221, 119, 50, 155, 219, 145, 64, 47, 189, 160, 178, 206, 147, 12, 10, 52, 214, 36, 65, 20, 176, 127, 196, 117, 28, 218, 17, 184, 125, 84, 46, 88, 143, 123, 184, 161, 108, 180, 221, 146, 246, 61, 16, 222, 225, 38, 68, 57, 175, 138, 244, 235, 4, 13, 243, 170, 219, 173, 147, 155, 199, 59, 89, 42, 121, 242, 32, 126, 162, 215, 60, 205, 165, 179, 177, 233, 99, 118, 223, 125, 38, 83, 242, 18, 166, 159, 85, 249, 14, 152, 177, 218, 56, 173, 229, 219, 59, 215, 120, 109, 164, 137, 52, 82, 50 },
                            PhoneNumber = "2568947898",
                            UserType = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 11, 18, 19, 39, 2, 950, DateTimeKind.Utc).AddTicks(4871),
                            Email = "admin1@example.com",
                            FirstName = "aNbdnOzUNuGnMPCOxe7GbA==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "zWkKiFF1SEkTjhIMvlgAfg==",
                            PasswordHash = new byte[] { 42, 18, 9, 178, 22, 53, 79, 190, 239, 8, 248, 124, 41, 229, 44, 171, 130, 34, 3, 132, 199, 225, 83, 108, 109, 90, 120, 171, 244, 25, 136, 86, 126, 96, 202, 72, 5, 84, 250, 247, 4, 242, 127, 20, 228, 129, 170, 96, 42, 137, 194, 143, 173, 154, 210, 118, 100, 238, 168, 46, 70, 233, 153, 180 },
                            PasswordSalt = new byte[] { 209, 170, 1, 45, 25, 200, 95, 190, 149, 202, 13, 171, 35, 97, 18, 2, 192, 206, 212, 133, 98, 253, 39, 221, 119, 50, 155, 219, 145, 64, 47, 189, 160, 178, 206, 147, 12, 10, 52, 214, 36, 65, 20, 176, 127, 196, 117, 28, 218, 17, 184, 125, 84, 46, 88, 143, 123, 184, 161, 108, 180, 221, 146, 246, 61, 16, 222, 225, 38, 68, 57, 175, 138, 244, 235, 4, 13, 243, 170, 219, 173, 147, 155, 199, 59, 89, 42, 121, 242, 32, 126, 162, 215, 60, 205, 165, 179, 177, 233, 99, 118, 223, 125, 38, 83, 242, 18, 166, 159, 85, 249, 14, 152, 177, 218, 56, 173, 229, 219, 59, 215, 120, 109, 164, 137, 52, 82, 50 },
                            PhoneNumber = "1234512345",
                            UserType = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 18, 22, 39, 2, 950, DateTimeKind.Local).AddTicks(6210),
                            OperationClaimId = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 18, 22, 39, 2, 950, DateTimeKind.Local).AddTicks(6216),
                            OperationClaimId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 11, 18, 22, 39, 2, 950, DateTimeKind.Local).AddTicks(6220),
                            OperationClaimId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 11, 18, 22, 39, 2, 950, DateTimeKind.Local).AddTicks(6223),
                            OperationClaimId = 3,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Customer", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Domain.Entities.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Favorite", b =>
                {
                    b.HasOne("Domain.Entities.Customer", "Customer")
                        .WithMany("Favorites")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.HasOne("Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Domain.Entities.OrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.OrderStatus", null)
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId1");

                    b.Navigation("Customer");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Payment", b =>
                {
                    b.HasOne("Domain.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entities.ProductReview", b =>
                {
                    b.HasOne("Domain.Entities.Customer", "Customer")
                        .WithMany("ProductReviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.ShoppingBasket", b =>
                {
                    b.HasOne("Domain.Entities.Customer", "Customer")
                        .WithOne("ShoppingBasket")
                        .HasForeignKey("Domain.Entities.ShoppingBasket", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Entities.ShoppingBasketDetail", b =>
                {
                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("ShoppingCartDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ShoppingBasket", "ShoppingBasket")
                        .WithMany("ShoppingBasketDetails")
                        .HasForeignKey("ShoppingBasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingBasket");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Entities.Customer", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");

                    b.Navigation("ShoppingBasket")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Domain.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entities.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("ProductReviews");

                    b.Navigation("ShoppingCartDetails");
                });

            modelBuilder.Entity("Domain.Entities.ShoppingBasket", b =>
                {
                    b.Navigation("ShoppingBasketDetails");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
